'use strict';
/*
  Problem Statement:
  https://projecteuler.net/problem=1

  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  find the sum of the even-valued terms.
*/

/* Function to generate fibonacci series
 It accepts the upper limit in the series and an initial array
*/
function generateFibonacci(upperLimit, array=[0,1]) {
  if(array[array.length - 1] >= upperLimit) {
    return;
  } else {
    array[array.length] = array[array.length - 1] + array[array.length - 2];
    generateFibonacci(upperLimit, array);
  }
  return array;
}

function sumOfFiboEven(upperLimit) {
  let fiboArray = generateFibonacci(upperLimit, [1,2]);
  let sum = fiboArray.reduce((previousValue, currentElem) => {
    if(currentElem%2 === 0) {
      return previousValue + currentElem;
    } else {
      return previousValue;
    }
  }, 0);
  return sum;
}

console.log(sumOfFiboEven(4000000));